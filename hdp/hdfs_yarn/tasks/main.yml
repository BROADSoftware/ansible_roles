
# ===================================================== Package installation
- name: Install core HDP package
  yum: 
    name: hadoop,hadoop-hdfs,hadoop-libhdfs,hadoop-yarn,hadoop-mapreduce,hadoop-client,openssl
    state: present

- name: Install HDP compression library
  yum: 
    name: snappy,snappy-devel,lzo,lzo-devel,hadooplzo,hadooplzo-native
    state: present

# ===================================================== Folder creation

- name: "Create PrimaryNamenode data folder"
  file: path={{item}} state=directory  owner=hdfs group=hadoop mode=0755
  with_items: hdfs_pnn_data_folder
  when: ansible_nodename in groups['hdfs_pnn'] 

- name: "Create SecondaryNamenode data folder"
  file: path={{item}} state=directory  owner=hdfs group=hadoop mode=0755
  with_items: hdfs_snn_data_folder
  when: ansible_nodename in groups['hdfs_snn']

- name: "Create Datanode data folder"
  file: path={{item}} state=directory  owner=hdfs group=hadoop mode=0755
  with_items: hdfs_dn_data_folder
  when: ansible_nodename in groups['hdfs_dn']

- name: "Create Yarn local dir"
  file: path=/hadoop/yarn/local state=directory  owner=yarn group=hadoop mode=0755
  when: ansible_nodename in groups['yarn_rm'] or ansible_nodename in groups['yarn_nm'] 

- name: "Create Yarn log dir"
  file: path=/hadoop/yarn/log state=directory  owner=yarn group=hadoop mode=0755
  when: ansible_nodename in groups['yarn_rm'] or ansible_nodename in groups['yarn_nm'] 


- name: Create hdfs log dir
  file: path=/var/log/hdfs state=directory owner=hdfs group=hadoop mode=0755

- name: Create hdfs pid dir
  file: path=/var/run/hdfs state=directory owner=hdfs group=hadoop mode=0755
 
- name: Create yarn log dir
  file: path=/var/log/yarn state=directory owner=yarn group=hadoop mode=0755

- name: Create yarn pid dir
  file: path=/var/run/yarn state=directory owner=yarn group=hadoop mode=0755
  
- name: Create mapred log dir
  file: path=/var/log/mapred state=directory owner=mapred group=hadoop mode=0755

- name: Create mapred pid dir
  file: path=/var/run/mapred state=directory owner=mapred group=hadoop mode=0755
 
 
# ===================================================== hdp-select handling
 
# Need this step, as creates: on shell command above does not works on symlink.  
- name: check if hdp-select has been executed
  shell: ls -la /usr/hdp/current/knox-server
  failed_when: false
  changed_when: false
  register: list_a_link

- name: Grab the hdp version
  shell: expr match $(rpm -qa | grep hdp) 'hdp-select-\([0-9.\-]*\)\.el.*'
  register: hdp_version
  failed_when: false
  changed_when: false
  when: list_a_link.rc != 0
  
- debug: msg="Hdp version {{hdp_version.stdout}}"
  when: list_a_link.rc != 0


- name: "Execute hdp-select to build symlink from /usr/hdp/current to /usr/hdp/{{hdp_version.stdout}}"
  shell: hdp-select set all {{hdp_version.stdout}}
  when: list_a_link.rc != 0
  
# ===================================================== Handle Hadoop configuration


- name: Create Hadoop conf dir
  file: path={{haddop_conf_dir}} state=directory owner=hdfs group=hadoop mode=0755


- name: Setup core-site.xml
  template:
    src: "core-site.xml.j2"
    dest: "{{haddop_conf_dir}}/core-site.xml"
    owner: hdfs
    group: hadoop
    mode: 0644
    backup: yes
  notify:
  - restart hdfs-nn  
  - restart hdfs-dn
  
- name: Setup hdfs-site.xml
  template:
    src: "hdfs-site.xml.j2"
    dest: "{{haddop_conf_dir}}/hdfs-site.xml"
    owner: hdfs
    group: hadoop
    mode: 0644
    backup: yes
  notify:
  - restart hdfs-nn  
  - restart hdfs-dn

  
- name: Setup dfs.exclude
  template:
    src: "dfs.exclude.j2"
    dest: "{{haddop_conf_dir}}/dfs.exclude"
    owner: hdfs
    group: hadoop
    mode: 0644
    backup: yes
  notify:
  - restart hdfs-nn  
  - restart hdfs-dn


- name: Setup yarn-site.xml
  template:
    src: "yarn-site.xml.j2"
    dest: "{{haddop_conf_dir}}/yarn-site.xml"
    owner: yarn
    group: hadoop
    mode: 0644
    backup: yes
#  notify:
#  - restart yarn-rm  
#  - restart yarn-nm
  

- name: Setup mapred-site.xml
  template:
    src: "mapred-site.xml.j2"
    dest: "{{haddop_conf_dir}}/mapred-site.xml"
    owner: mapred
    group: hadoop
    mode: 0644
    backup: yes
#  notify:
#  - restart yarn-rm  
#  - restart yarn-nm
#  - restart mapred-hs
  

# ===================================================== Patch /etc/profile and hadoop-env.sh configuration


- name: Adjust /etc/profile
  blockinfile:
    dest: /etc/profile
    backup: yes
    insertafter: EOF
    marker: "# {mark} Ansible managed block"
    content: |
      export JAVA_HOME=/usr/java/default;
      export HADOOP_CONF_DIR={{haddop_conf_dir}}
      export PATH=$PATH:$JAVA_HOME:$HADOOP_CONF_DIR
  notify:
  - restart hdfs-nn  
  - restart hdfs-dn
#  - restart yarn-rm  
#  - restart yarn-nm
#  - restart mapred-hs
  
- name: Adjust hadoop-env.sh
  blockinfile:
    dest: "{{haddop_conf_dir}}/hadoop-env.sh"
    backup: yes
    insertafter: "# The java implementation to use\\.*"
    marker: "# {mark} Ansible managed block"
    content: |
      export JAVA_HOME=/usr/java/default;
      export HADOOP_LOG_DIR=/var/log/hdfs;
      export HADOOP_PID_DIR=/var/run/hdfs;
  notify:
  - restart hdfs-nn  
  - restart hdfs-dn
#  - restart yarn-rm  
#  - restart yarn-nm
#  - restart mapred-hs
  

# ===================================================== Format HDFS
#  shell: sudo -u hdfs /bin/bash -c "export JAVA_HOME=/usr/java/default; /usr/hdp/current/hadoop-hdfs-namenode/../hadoop/bin/hdfs namenode -format"

- name: Format HDFS
  shell: sudo -u hdfs /usr/hdp/current/hadoop-hdfs-namenode/../hadoop/bin/hdfs namenode -format
  args:
    creates: "{{hdfs_pnn_data_folder[0]}}/current/VERSION"
  when: ansible_nodename in groups['hdfs_pnn']
  
  
# ===================================================== HDFS Service stuff  

- name: Create hdfs-pnn service
  template:
    src: "hdfs-pnn.service.j2"
    dest: "/usr/lib/systemd/system/hdfs-pnn.service"
    owner: root
    group: root
    mode: 0644
    backup: no
  when: ansible_nodename in groups['hdfs_pnn']
  notify:
  - reload service file
  - restart hdfs-nn  
  - restart hdfs-dn
        
   
- name: Enable hdfs-pnn services
  service:
    name: hdfs-pnn
    enabled: yes 
  when: ansible_nodename in groups['hdfs_pnn']
    

- name: Create hdfs-snn service
  template:
    src: "hdfs-snn.service.j2"
    dest: "/usr/lib/systemd/system/hdfs-snn.service"
    owner: root
    group: root
    mode: 0644
    backup: no
  when: ansible_nodename in groups['hdfs_snn']
  notify:
  - reload service file
  - restart hdfs-nn  
  - restart hdfs-dn
        
   
- name: Enable hdfs-snn services
  service:
    name: hdfs-snn
    enabled: yes 
  when: ansible_nodename in groups['hdfs_snn']
    

- name: Create hdfs-dn service
  template:
    src: "hdfs-dn.service.j2"
    dest: "/usr/lib/systemd/system/hdfs-dn.service"
    owner: root
    group: root
    mode: 0644
    backup: no
  when: ansible_nodename in groups['hdfs_dn']
  notify:
  - reload service file
  - restart hdfs-nn  
  - restart hdfs-dn
        
   
- name: Enable hdfs-dn services
  service:
    name: hdfs-dn
    enabled: yes 
  when: ansible_nodename in groups['hdfs_dn']
    

  

      