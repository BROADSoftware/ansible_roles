 
- name: Install zookeeper
  yum: 
    name: zookeeper-server
    state: present
    
  
- name: Create zookeeper folders
  file: path={{ item }} state=directory owner=zookeeper group=hadoop mode=0755
  with_items:
    - /var/log/zookeeper
    - /var/run/zookeeper
    - /etc/zookeeper
    - "{{ zookeeper_data_dir }}"
     
- name: Rename original conf folder kept for documentation
  shell: mv /etc/zookeeper/conf /etc/zookeeper/conf-template
  args:
    creates: /etc/zookeeper/conf-template
 
- name: Create zookeeper host id
  template:
    src: myid.j2
    dest: "{{ zookeeper_data_dir }}/myid"
    owner: root
    group: root
    mode: 0644
    backup: no
  
  
- name: Create zookeeper config
  template:
    src: zoo.cfg.j2
    dest: /etc/zookeeper/zoo.cfg
    owner: root
    group: root
    mode: 0644
    backup: yes
  notify:
  - restart zookeeper
    
        
- name: Create zookeeper env
  template:
    src: zookeeper-env.sh.j2
    dest: /etc/zookeeper/zookeeper-env.sh
    owner: root
    group: root
    mode: 0644
    backup: yes
  notify:
  - restart zookeeper
    
- name: Create zookeeper service
  template:
    src: zookeeper.service.j2
    dest: /usr/lib/systemd/system/zookeeper.service
    owner: root
    group: root
    mode: 0644
    backup: no
  notify:
  - reload service file
  - restart zookeeper

- name: Create zookeeper SERVER log4j config
  template:
    src: srv.log4j.properties.j2
    dest: /etc/zookeeper/srv.log4j.properties
    owner: root
    group: root
    mode: 0644
    backup: yes
  notify:
  - restart zookeeper
 
    
- name: Create zkCli.sh
  template:
    src: zkCli.sh.j2
    dest: /usr/bin/zkCli.sh
    owner: root
    group: root
    mode: 0755
    backup: no

- name: Create zookeeper CLIENT log4j config
  template:
    src: cli.log4j.properties.j2
    dest: /etc/zookeeper/cli.log4j.properties
    owner: root
    group: root
    mode: 0644
    backup: yes
    
    
- name: Enable zookeeper services
  service:
    name: zookeeper
    enabled: yes        
    
        
      