---
# Copyright (C) 2015 BROADSoftware
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
#limitations under the License.
#

- name: Create hdfs user
  user:
    name: hdfs
    system: true
    createhome: no
    group: hadoop
    shell: /sbin/nologin
    home: /tmp
    state: present

- name: "Create Namenode data folder"
  file: path={{item}} state=directory  owner=hdfs group=hadoop mode=0755
  with_items: hdfs_nn_data_folder
  when: ansible_nodename in groups['hdfs_nn']

- name: "Create Datanode data folder"
  file: path={{item}} state=directory  owner=hdfs group=hadoop mode=0755
  with_items: hdfs_dn_data_folder
  when: ansible_nodename in groups['hdfs_dn']


- name: Create hdfs log dir
  file: path=/var/log/hdfs state=directory owner=hdfs group=hadoop mode=0755

- name: Create hdfs pid dir
  file: path=/var/run/hdfs state=directory owner=hdfs group=hadoop mode=0755
 
- name: Adjust hadoop-config.sh
  blockinfile:
    dest: /opt/hadoop-{{ hadoop_version }}/libexec/hadoop-config.sh
    backup: yes
    insertafter: "limitations under the License\\."
    marker: "# {mark} Ansible managed block"
    content: |
      export JAVA_HOME=/usr/java/default;
      export HADOOP_LOG_DIR=/var/log/hdfs;
      export HADOOP_PID_DIR=/var/run/hdfs;
  notify:
  - restart hdfs-nn  
  - restart hdfs-dn

- name: Setup core-site.xml
  template:
    src: "core-site.xml.j2"
    dest: "/opt/hadoop-{{ hadoop_version }}/etc/hadoop/core-site.xml"
    owner: hdfs
    group: hadoop
    mode: 0644
    backup: yes
  notify:
  - restart hdfs-nn  
  - restart hdfs-dn
  
- name: Setup hdfs-site.xml
  template:
    src: "hdfs-site.xml.j2"
    dest: "/opt/hadoop-{{ hadoop_version }}/etc/hadoop/hdfs-site.xml"
    owner: hdfs
    group: hadoop
    mode: 0644
    backup: yes
  notify:
  - restart hdfs-nn  
  - restart hdfs-dn
  
- name: Format HDFS
  shell: sudo -u hdfs /opt/hadoop-{{ hadoop_version }}/bin/hdfs namenode -format
  args:
    creates: "{{hdfs_nn_data_folder[0]}}/current/VERSION"
  when: ansible_nodename in groups['hdfs_nn']
  
- name: Setup hdfs command
  template:
    src: "hdfs.j2"
    dest: "/usr/bin/hdfs"
    owner: hdfs
    group: hadoop
    mode: 0755
    backup: no
    
# --------------------------- Service stuff  

- name: Create hdfs-nn service
  template:
    src: "hdfs-nn.service.j2"
    dest: "/usr/lib/systemd/system/hdfs-nn.service"
    owner: root
    group: root
    mode: 0644
    backup: no
  when: ansible_nodename in groups['hdfs_nn']
  notify:
  - reload service file
  - restart hdfs-nn  
  - restart hdfs-dn
        
   
- name: Enable hdfs-nn services
  service:
    name: hdfs-nn
    enabled: yes 
  when: ansible_nodename in groups['hdfs_nn']
    

- name: Create hdfs-dn service
  template:
    src: "hdfs-dn.service.j2"
    dest: "/usr/lib/systemd/system/hdfs-dn.service"
    owner: root
    group: root
    mode: 0644
    backup: no
  when: ansible_nodename in groups['hdfs_dn']
  notify:
  - reload service file
  - restart hdfs-nn  
  - restart hdfs-dn
        
   
- name: Enable hdfs-dn services
  service:
    name: hdfs-dn
    enabled: yes 
  when: ansible_nodename in groups['hdfs_dn']
    

  
  